<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Python</title>
 <link href="http://bsk.education/CSNYC_Python/atom.xml" rel="self"/>
 <link href="http://bsk.education/CSNYC_Python/"/>
 <updated>2016-07-24T21:12:39-04:00</updated>
 <id>http://bsk.education/CSNYC_Python</id>
 <author>
   <name>Ben Samuels-Kalow</name>
   <email>bsk@ms223.org</email>
 </author>

 
 <entry>
   <title>Methods</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/31/methods/"/>
   <updated>2016-05-31T22:33:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/31/methods</id>
   <content type="html">&lt;h2 id=&quot;do-now-in-pycharm&quot;&gt;Do Now (in PyCharm)&lt;/h2&gt;
&lt;p&gt;Run this code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
     &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;
     &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;
     &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;time1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;What the heck?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In Google Classroom…&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Looking at the output, how can you tell the difference between &lt;code class=&quot;highlighter-rouge&quot;&gt;time1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;time2&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;What can you add to print out the &lt;code class=&quot;highlighter-rouge&quot;&gt;hour&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;minute&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;second&lt;/code&gt; attributes of &lt;code class=&quot;highlighter-rouge&quot;&gt;time1&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;What happens if you try to add &lt;code class=&quot;highlighter-rouge&quot;&gt;time1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;time2&lt;/code&gt;?&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;methods&quot;&gt;Methods&lt;/h2&gt;
&lt;p&gt;We can’t (easily) add the two &lt;code class=&quot;highlighter-rouge&quot;&gt;Time&lt;/code&gt; objects together, but it’s time to fix that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We&lt;/strong&gt; know that we &lt;strong&gt;should&lt;/strong&gt; be able to add two times together, but we need to create a &lt;strong&gt;method&lt;/strong&gt; in order for Python to be able to do that. We’ve already seen one &lt;strong&gt;method&lt;/strong&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In order to be able to read our &lt;code class=&quot;highlighter-rouge&quot;&gt;Time&lt;/code&gt;s, we need to turn them into &lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt;ings.&lt;/p&gt;

&lt;p&gt;We can manually get each:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Luckily, we can make the computer do that work for us, every time we use the &lt;code class=&quot;highlighter-rouge&quot;&gt;Time&lt;/code&gt; class&lt;/p&gt;

&lt;p&gt;Just like we defined &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__&lt;/code&gt;, we can define a special function &lt;em&gt;inside&lt;/em&gt; of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Time&lt;/code&gt; class. A &lt;strong&gt;function&lt;/strong&gt; inside of a &lt;strong&gt;class&lt;/strong&gt; is called a &lt;strong&gt;method&lt;/strong&gt;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;method-to-the-madness&quot;&gt;Method to the Madness&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Define a &lt;code class=&quot;highlighter-rouge&quot;&gt;__str__&lt;/code&gt; method. It should start like this:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Notice that methods are indented INSIDE the class and BELOW the __init__ method.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This will get called when you print an object, and it should &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; a string that is easy to read and understand, like &lt;code class=&quot;highlighter-rouge&quot;&gt;5:32:0&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Next, define a &lt;code class=&quot;highlighter-rouge&quot;&gt;__add__&lt;/code&gt; method.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__add__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;somethingelse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Watch your whitespace!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It will take in &lt;strong&gt;two&lt;/strong&gt; parameters: &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;/code&gt; and some &lt;code class=&quot;highlighter-rouge&quot;&gt;other&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Time&lt;/code&gt; object. Before you start coding, think about what data Python can and &lt;em&gt;cannot&lt;/em&gt; add together. How can we turn &lt;code class=&quot;highlighter-rouge&quot;&gt;Time&lt;/code&gt; objects into data which can be added, and into data to which we can add &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; (semicolons!)&lt;/p&gt;

&lt;h3 id=&quot;test-your-code&quot;&gt;Test your code&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Create at least 3 times:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Then, run:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time3&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# What&#39;s your output?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-classmega-octicon-octicon-mark-githubspan-upload-your-code-to-github-in-a-file-called-methodtothemadnesspy&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mark-github&quot;&gt;&lt;/span&gt; Upload your code to GitHub in a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;Method_To_The_Madness.py&lt;/code&gt;&lt;/h4&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;practice-with-classes&quot;&gt;Practice with Classes&lt;/h2&gt;
&lt;p&gt;Go &lt;a href=&quot;https://www.codecademy.com/en/courses/python-intermediate-en-WL8e4/0/1?curriculum_id=4f89dab3d788890003000096&quot;&gt;here&lt;/a&gt;, and get to lesson 18.&lt;/p&gt;

&lt;h2 id=&quot;lab&quot;&gt;Lab&lt;/h2&gt;
&lt;p&gt;Write a definition for a class named &lt;code class=&quot;highlighter-rouge&quot;&gt;Kangaroo&lt;/code&gt; with the following methods:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;An &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__&lt;/code&gt; method that initializes an attribute named &lt;code class=&quot;highlighter-rouge&quot;&gt;pouch_contents&lt;/code&gt; to an empty list.&lt;/li&gt;
  &lt;li&gt;A method named &lt;code class=&quot;highlighter-rouge&quot;&gt;put_in_pouch&lt;/code&gt; that takes an object of any type and adds it to &lt;code class=&quot;highlighter-rouge&quot;&gt;pouch_contents&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;__str__&lt;/code&gt; method that returns a string representation of the Kangaroo object and the contents of the pouch.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Test your code by creating two Kangaroo objects, assigning them to variables named &lt;code class=&quot;highlighter-rouge&quot;&gt;kanga&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;roo&lt;/code&gt;, and then adding &lt;code class=&quot;highlighter-rouge&quot;&gt;roo&lt;/code&gt; to the contents of &lt;code class=&quot;highlighter-rouge&quot;&gt;kanga&lt;/code&gt;’s pouch.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This is kind of awesome…&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Hey, that’s the name of the lesson! &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Classes Part II</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/27/classes-part-ii/"/>
   <updated>2016-05-27T22:13:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/27/classes-part-ii</id>
   <content type="html">&lt;h2 id=&quot;do-now&quot;&gt;Do Now&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_pet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Nymeria&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_pet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Answer in comments:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;What do you think &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__ &lt;/code&gt; does?`?&lt;/li&gt;
  &lt;li&gt;What if you wanted to initialize all pet objects with a name and a color?&lt;/li&gt;
  &lt;li&gt;How would you modify the code to create a pet object with a name of “Nymeria” and a color of “brown”?&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;classes--blueprints&quot;&gt;Classes == Blueprints&lt;/h2&gt;

&lt;p&gt;Classes are like blueprints. When I call the &lt;code class=&quot;highlighter-rouge&quot;&gt;Pet&lt;/code&gt; class above:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_pet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Nymeria&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Python creates a new &lt;strong&gt;object&lt;/strong&gt; that is an &lt;strong&gt;instance&lt;/strong&gt; of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Pet&lt;/code&gt; &lt;strong&gt;class&lt;/strong&gt;. Let’s take a second to absorb that. I can make many &lt;code class=&quot;highlighter-rouge&quot;&gt;Pet&lt;/code&gt;s by &lt;strong&gt;instantiating&lt;/strong&gt; (creating) more &lt;strong&gt;instances&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Classes are like blueprints or definitions for “chunks” of code.&lt;/li&gt;
  &lt;li&gt;“Instantiate” just means to create an &lt;strong&gt;object&lt;/strong&gt; from the &lt;strong&gt;class&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;The resulting “chunk” is called an object(&lt;code class=&quot;highlighter-rouge&quot;&gt;Pet(&quot;Nymeria&quot;)&lt;/code&gt;) and you then assign it to a variable (&lt;code class=&quot;highlighter-rouge&quot;&gt;my_pet&lt;/code&gt;) to work with it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://bsk.education/CS11/2016/05/24/classes/&quot;&gt;Last class&lt;/a&gt;&lt;/strong&gt; we added attributes &lt;strong&gt;after&lt;/strong&gt; the class was instantiated, but &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;/code&gt; allows for us to assign attributes at the beginning. When we build classes, we don’t want to randomly add attributes. We want to go in with a &lt;strong&gt;blueprint&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;practice-objects&quot;&gt;Practice Objects&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Song&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lyrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lyrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lyrics&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sing_me_a_song&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lyrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;happy_bday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Song&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Happy birthday to you&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;&quot;These lyrics are copywrighted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;s&quot;&gt;&quot;So I&#39;ll stop here&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;hotline_bling&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Song&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;You used to call me on my&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;&quot;You used to, you used to&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;&quot;Yeah&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,])&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# This is your daily reminder that Drake is Canadian&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;happy_bday&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sing_me_a_song&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hotline_bling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sing_me_a_song&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;why-do-i-need-self-when-i-make-init--or-other-functions-for-classes&quot;&gt;Why do I need self when I make &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__ &lt;/code&gt; or other functions for classes?&lt;/h4&gt;

&lt;p&gt;If you don’t have &lt;code class=&quot;highlighter-rouge&quot;&gt;self.lyrics&lt;/code&gt;, then code like &lt;code class=&quot;highlighter-rouge&quot;&gt;lyrics = &quot;Happy birthday to you&quot;&lt;/code&gt; could mean a variable &lt;code class=&quot;highlighter-rouge&quot;&gt;cheese&lt;/code&gt; or the attribute of a particular object. With &lt;code class=&quot;highlighter-rouge&quot;&gt;self.lyrics = &quot;Happy birthday to you&quot;&lt;/code&gt; it’s clear you mean the attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;self.lyrics&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write some more songs using this and make sure you understand that you’re passing a list of strings as the lyrics.&lt;/li&gt;
  &lt;li&gt;Modify the class so that it takes in the title and the artist as well as lyrics of a song (hint: you will need to add more &lt;code class=&quot;highlighter-rouge&quot;&gt;self._____&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Modify the function &lt;code class=&quot;highlighter-rouge&quot;&gt;sing_me_a_song&lt;/code&gt; so it prints out something like:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Spectacular Failure by Lake Street Dive
I can&#39;t excuse your behavior
What a spectacular failure
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-classmega-octicon-octicon-mark-githubspan-upload-your-code-to-github-in-a-file-called-songlyricspy&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mark-github&quot;&gt;&lt;/span&gt; Upload your code to GitHub in a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;SongLyrics.py&lt;/code&gt;&lt;/h4&gt;
</content>
 </entry>
 
 <entry>
   <title>Classes Part I</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/24/classes/"/>
   <updated>2016-05-24T22:25:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/24/classes</id>
   <content type="html">&lt;h2 id=&quot;do-now-in-the-classroom&quot;&gt;Do Now (In the Classroom):&lt;/h2&gt;
&lt;p&gt;Pick an object in the classroom. Describe it, using as many adjectives as you can.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“this ball is round. it is pink. it is big.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;describing-things&quot;&gt;Describing Things&lt;/h2&gt;
&lt;p&gt;Normally, in code, you can describe &lt;strong&gt;ONE&lt;/strong&gt; thing at a time. You can make:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;red&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;round&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But what if we want to compare &lt;strong&gt;TWO&lt;/strong&gt; things? Well we could always:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ball1size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ball2size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ball1color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;red&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ball2color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ball1shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ball2shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Ugh much work&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But that’s complicated, and hard to keep track of. And what if we want to add another ball? Do we need to add 3 &lt;strong&gt;MORE&lt;/strong&gt; statements to describe that ball?&lt;/p&gt;

&lt;p&gt;What if we could make our own &lt;code class=&quot;highlighter-rouge&quot;&gt;objects&lt;/code&gt; in code, with &lt;code class=&quot;highlighter-rouge&quot;&gt;attributes&lt;/code&gt;, just like objects in the real world?&lt;/p&gt;

&lt;p&gt;Once we write down that balls have the attributes &lt;code class=&quot;highlighter-rouge&quot;&gt;size&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;color&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;shape&lt;/code&gt;, we can just create a &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;, so that we can make new balls easily. These new &lt;code class=&quot;highlighter-rouge&quot;&gt;balls&lt;/code&gt; come with the attributes already created.&lt;/p&gt;

&lt;p&gt;Basically, this makes code easier and less complicated, and lets us treat each &lt;code class=&quot;highlighter-rouge&quot;&gt;ball&lt;/code&gt; as its own thing, and not as a bunch of separate things with the same sticker on them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Take a look at this mess. How would you print out the full name of each pet?&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_pet_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;pet&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_1_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;direwolf&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_1_noise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;howl&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_1_full_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Ghost&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_pet_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;pet&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_2_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;direwolf&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_2_noise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;howl&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_2_full_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Nymeria&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_pet_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;pet&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_3_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;direwolf&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_3_noise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;howl&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_3_full_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Summer&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_pets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_pet_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_pet_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_pet_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_pets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;## print full name of each pet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Ugh that’s terrible&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;classes&quot;&gt;Classes&lt;/h2&gt;
&lt;p&gt;We’ve seen a bunch of different kind of built-in data in Python: integers, floats, strings, booleans, lists, dictionaries…&lt;/p&gt;

&lt;p&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; is a way to define our own type of data.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Represents a pet&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_pet_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;direwolf&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;howl&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Ghost&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_pet_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;direwolf&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;howl&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Nymeria&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_pet_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;direwolf&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;howl&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_pet_3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Summer&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_pets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_pet_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_pet_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_pet_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_pets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_pets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;my_pet_1&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;my_pet_2&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;my_pet_3&lt;/code&gt; are all &lt;strong&gt;instances&lt;/strong&gt; of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Pet&lt;/code&gt; &lt;strong&gt;class.&lt;/strong&gt; They’re have different &lt;strong&gt;attributes&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-mortar-boardspan-create-a-color-class&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mortar-board&quot;&gt;&lt;/span&gt; Create a Color Class&lt;/h2&gt;
&lt;p&gt;In this lab we will create a class that will represent colors and build a function to combine two colors.&lt;/p&gt;

&lt;h3 id=&quot;how-do-colors-even&quot;&gt;How do colors even&lt;/h3&gt;
&lt;p&gt;RGB is a way of storing color data. R stands for red, G stands for green, and B stands for blue. Each color is given a value from 0 to 255.&lt;/p&gt;

&lt;p&gt;You can use this tool to see what different colors are:&lt;a href=&quot;http://www.rapidtables.com/web/color/RGB_Color.htm&quot;&gt;http://www.rapidtables.com/web/color/RGB_Color.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.24ways.org/2009/01/f1.gif&quot; alt=&quot;https://media.24ways.org/2009/01/f1.gif&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Specification&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Points&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Create a &lt;strong&gt;class&lt;/strong&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Color&lt;/code&gt;.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Instantiate&lt;/strong&gt; at least 3 colors.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Add &lt;strong&gt;attributes&lt;/strong&gt; of r, g, and b to those instances.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Define a function, &lt;code class=&quot;highlighter-rouge&quot;&gt;add_color(color1, color2)&lt;/code&gt;, which takes in two colors and returns a color that is the average of the two reds, greens, and blues.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Test your function and see if it accurately returns colors&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;span-classmega-octicon-octicon-mark-githubspan-upload-your-code-to-github-in-a-file-called-colorclasspy&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mark-github&quot;&gt;&lt;/span&gt; Upload your code to GitHub in a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;ColorClass.py&lt;/code&gt;&lt;/h4&gt;
</content>
 </entry>
 
 <entry>
   <title>Todo List App</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/23/todo-list-app/"/>
   <updated>2016-05-23T08:21:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/23/todo-list-app</id>
   <content type="html">&lt;h2 id=&quot;span-classmega-octicon-octicon-tasklistspan-todo-list-app&quot;&gt;&lt;span class=&quot;mega-octicon octicon-tasklist&quot;&gt;&lt;/span&gt; Todo List App&lt;/h2&gt;

&lt;p&gt;We’re going to create to-do list app.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
In PyCharm, create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;ToDo&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Specification&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Points&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Empty dictionary to store information&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Key for each day of the week&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Each key has a list value that stores items&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;User is prompted&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;User can type &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; program will ask what day and add it correctly&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;User can type &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; and the program will ask for the day and print the values&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Extensions&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Points&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Use .split() to allow the user to type &lt;code class=&quot;highlighter-rouge&quot;&gt;get Friday&lt;/code&gt; and see the values&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Use .split() to make &lt;code class=&quot;highlighter-rouge&quot;&gt;add Friday watch tv and relax&lt;/code&gt; update the list&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;_ / 8&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Example Output&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;What would you like to do?
add
What day?
Friday
What would you like to add to Friday&#39;s to-do list?
practice clarinet
What would you like to do?
get
What day?
Friday
You have to practice clarinet.
What would you like to do?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;our-notes&quot;&gt;Our notes&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# some way to add&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# some way to read&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;some_dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;monday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[]&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;#days of the week&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# loop this question...&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;#append the action to the list value of the day keys&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;some_dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#until you...&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# I need an option to call choice()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some_dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# I need an option to call choice()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user_choice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;How can I help you?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# if they choose &#39;add&#39; call add()&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# if they choose &#39;get&#39; call get()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;something&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;monday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;monday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-classmega-octicon-octicon-mark-githubspan-upload-your-code-to-github-in-a-file-called-todopy&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mark-github&quot;&gt;&lt;/span&gt; Upload your code to GitHub in a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;ToDo.py&lt;/code&gt;&lt;/h4&gt;
</content>
 </entry>
 
 <entry>
   <title>Dictionaries of Lists</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/20/dictionaries-of-lists/"/>
   <updated>2016-05-20T16:38:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/20/dictionaries-of-lists</id>
   <content type="html">&lt;h2 id=&quot;span-classmega-octicon-octicon-clockspan-do-now-answer-in-google-classroom&quot;&gt;&lt;span class=&quot;mega-octicon octicon-clock&quot;&gt;&lt;/span&gt; Do Now (answer in Google Classroom)&lt;/h2&gt;

&lt;!-- ```python
list_dictionaries = {
 &#39;i&#39;: [1, 3, 4],
 &#39;am&#39;: [1, 2, 3, 4]
}
print list_dictionaries
# What type of data is list_dictionaries?
# What type of data are list_dictionaries keys?
# What type of data are list_dictionaries values??
# Update the value of &#39;am&#39; to [1, 2, 3, 4, 5]
``` --&gt;

&lt;p&gt;WITHOUT using PyCharm, predict what is printed by the code below:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;this_is_a_dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dog&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;elephant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this_is_a_dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dog&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-mortar-boardspan-mini-lesson&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mortar-board&quot;&gt;&lt;/span&gt; Mini-Lesson&lt;/h2&gt;

&lt;p&gt;Last time, we saw that dictionaries can pair keys of any data type with values of any data type. We paired strings with strings last time, but now we’re going to pair strings with lists.&lt;/p&gt;

&lt;p&gt;Let’s review how we &lt;strong&gt;add&lt;/strong&gt; values to a dictionary.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;list_dictionaries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&#39;i&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&#39;am&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;list_dictionaries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;groot&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# update the key &#39;groot&#39; with a list value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What if I know what to add the string &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;6&quot;&lt;/code&gt; to the key &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;groot&quot;&lt;/code&gt;? How do we add things to a list? &lt;code class=&quot;highlighter-rouge&quot;&gt;.append()&lt;/code&gt;!&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;list_dictionaries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;groot&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;six&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-tasklistspan-todo-list-app&quot;&gt;&lt;span class=&quot;mega-octicon octicon-tasklist&quot;&gt;&lt;/span&gt; Todo List App&lt;/h2&gt;

&lt;p&gt;We’re going to create to-do list app.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
In PyCharm, create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;ToDo&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Specification&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Points&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Empty dictionary to store information&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Key for each day of the week&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Each key has a list value that stores items&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;User is prompted&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;User can type &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; program will ask what day and add it correctly&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;User can type &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; and the program will ask for the day and print the values&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Extensions&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Points&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Use .split() to allow the user to type &lt;code class=&quot;highlighter-rouge&quot;&gt;get Friday&lt;/code&gt; and see the values&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Use .split() to make &lt;code class=&quot;highlighter-rouge&quot;&gt;add Friday watch tv and relax&lt;/code&gt; update the list&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;_ / 8&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Example Output&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;What would you like to do?
add
What day?
Friday
What would you like to add to Friday&#39;s to-do list?
practice clarinet
What would you like to do?
get
What day?
Friday
You have to practice clarinet.
What would you like to do?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;span-classmega-octicon-octicon-mark-githubspan-upload-your-code-to-github-in-a-file-called-todopy&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mark-github&quot;&gt;&lt;/span&gt; Upload your code to GitHub in a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;ToDo.py&lt;/code&gt;&lt;/h4&gt;
</content>
 </entry>
 
 <entry>
   <title>Dictionary Methods</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/17/dictionary-methods/"/>
   <updated>2016-05-17T18:39:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/17/dictionary-methods</id>
   <content type="html">&lt;h2 id=&quot;span-classmega-octicon-octicon-clockspan-do-now-in-google-classroom&quot;&gt;&lt;span class=&quot;mega-octicon octicon-clock&quot;&gt;&lt;/span&gt; Do Now (In Google Classroom)&lt;/h2&gt;

&lt;p&gt;How are dictionaries similar to lists? How are they different?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;When you’ve finished answering the Do Now, take a look at this code before we start the mini lesson.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
In PyCharm, create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;May 17 Do Now_Dictionaries&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Type and run the following code in the interpreter:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&#39;kittens&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;cute animals&#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;kittens&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;delicious&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What does the second line do?&lt;/p&gt;

&lt;p&gt;Type and run the following code in the interpreter:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;puppies&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;baby dogs&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What is the first line?
What does the second line do?&lt;/p&gt;

&lt;p&gt;Run the following code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&#39;hello&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;hola&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&#39;goodbye&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;adios&#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# None&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# {&#39;goodbye&#39;: 2}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then run:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&#39;hello&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;hola&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&#39;goodbye&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;adios&#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You get an error, right?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# In comments: What is different between&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# and&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-mortar-boardspan-mini-lesson&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mortar-board&quot;&gt;&lt;/span&gt; Mini-Lesson&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;If you’re searching for a value in a dictionary and you use a for loop, you’re doing it wrong. Stop, go back, and read the previous statement.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The second argument in &lt;code class=&quot;highlighter-rouge&quot;&gt;.pop(___,___)&lt;/code&gt; is described as the &lt;strong&gt;default value&lt;/strong&gt;. This is the value that will be returned if the first argument is &lt;strong&gt;not&lt;/strong&gt; in the dictionary.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;update or add the value of a key&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# clear values of a dictionary&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;del&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# remove entry with key &#39;Name&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;del&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# delete entire dictionary&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# removes the entry and returns the value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-verifiedspan-check-yourself&quot;&gt;&lt;span class=&quot;mega-octicon octicon-verified&quot;&gt;&lt;/span&gt; Check Yourself&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;How do we remove an item from a dictionary?&lt;/li&gt;
  &lt;li&gt;How do we add items to a dictionary?&lt;/li&gt;
  &lt;li&gt;How do we update items in a dictionary?&lt;/li&gt;
  &lt;li&gt;Why do we use &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-list-orderedspan-word-counter-app&quot;&gt;&lt;span class=&quot;mega-octicon octicon-list-ordered&quot;&gt;&lt;/span&gt; Word Counter App&lt;/h2&gt;

&lt;p&gt;In this lab we will implement a word frequency algorithm. It will tell you how many of each word you had in an essay.&lt;/p&gt;

&lt;p&gt;Make a variable for user input, something like&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;text_input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Paste your text here&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In order to turn this text into a list of lower case words we will use the &lt;code class=&quot;highlighter-rouge&quot;&gt;split(&quot;&quot;)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;replace()&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;lower()&lt;/code&gt; functions.&lt;/p&gt;

&lt;p&gt;For each word in the document, count the number of times it occurs.&lt;/p&gt;

&lt;p&gt;Consider the following phrase: ‘Cats are cool. Baby cats are called kittens. Cats make great pets.’&lt;/p&gt;

&lt;p&gt;The word ‘cats’ appears 3 times. The word ‘are’ appears 2 times.
The program will first create a dictionary with the words as keys and the number of times they occur as values.&lt;/p&gt;

&lt;p&gt;Then it will prompt the user which word they are curious about. If the word was in the paragraph it will print the number of times it occurred.&lt;/p&gt;

&lt;h4 id=&quot;span-classmega-octicon-octicon-mark-githubspan-upload-your-code-to-github-in-a-file-called-word-counter&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mark-github&quot;&gt;&lt;/span&gt; Upload your code to GitHub in a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;Word Counter&lt;/code&gt;&lt;/h4&gt;
</content>
 </entry>
 
 <entry>
   <title>Dictionaries</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/16/dictionaries/"/>
   <updated>2016-05-16T22:05:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/16/dictionaries</id>
   <content type="html">&lt;h2 id=&quot;do-now&quot;&gt;Do Now&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
In PyCharm, create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;May 16 Do Now_Dictionaries&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Type and run the following code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&#39;cat&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;a domestic feline&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&#39;dog&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;a domestic canine&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&#39;chair&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;furniture piece for sitting&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&#39;car&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;automobile&#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;dog&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;dog&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;cat&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;monkey&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_dictionary&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;What prints?&lt;/li&gt;
  &lt;li&gt;What type&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; is my_dictionary?&lt;/li&gt;
  &lt;li&gt;Add a line of code that will print the definition of &lt;code class=&quot;highlighter-rouge&quot;&gt;chair&lt;/code&gt;, then run the code again.&lt;/li&gt;
  &lt;li&gt;What happens if you use my_dictionary[‘kittens’]? What do you think that error means?&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;dictionary-----note-curly-brackets&quot;&gt;✍ &lt;code class=&quot;highlighter-rouge&quot;&gt;Dictionary = { }&lt;/code&gt; ← note curly brackets&lt;/h2&gt;

&lt;p&gt;Like a list, but has a key instead of an index.
Dictionaries pair the key with a value.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;SK&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The key &amp;amp; value can be any string or number.&lt;/p&gt;

&lt;p&gt;Dictionaries look like:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;passwords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;SK&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Lentino&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;67890&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Perez&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;54321&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;SK&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Dictionaries are great for things like &lt;strong&gt;address books&lt;/strong&gt; (pairing a name with a phone number), &lt;strong&gt;login pages&lt;/strong&gt; (pairing an e-mail address with a username), etc.&lt;/p&gt;

&lt;h2 id=&quot;dictionary-lab&quot;&gt;Dictionary Lab&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
In PyCharm, create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;Dictionary_Lab&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create a social network profile for yourself using a dictionary. I’ve suggested some keys, but you should feel free to add your own.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;user_profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# name&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# school&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# birthday&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# email&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# username(s)&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# where are you from?&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# number of siblings&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# skills&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# about you&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# favorite quote&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# favorite movie&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# favorite musician&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# favorite TV show&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# favorite book&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Make sure you can &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; the correct values for the corresponding key.&lt;/p&gt;

&lt;h4 id=&quot;span-classmega-octicon-octicon-mark-githubspan-upload-your-code-to-github-in-a-file-called-kbddictionarieskbd&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mark-github&quot;&gt;&lt;/span&gt; Upload your code to GitHub in a file called &lt;kbd&gt;Dictionaries&lt;/kbd&gt;&lt;/h4&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Hint: try &lt;code class=&quot;highlighter-rouge&quot;&gt;print type(my_dictionary)&lt;/code&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting Loopy</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/06/getting-loopy/"/>
   <updated>2016-05-06T23:36:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/06/getting-loopy</id>
   <content type="html">&lt;h2 id=&quot;do-now&quot;&gt;Do Now&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
In PyCharm, create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;May 6 Do Now_String Slicing&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Run the code below, and write a comment explaining what it does:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;string&quot;[a:b] &lt;/code&gt; syntax – print:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;it&quot;&lt;/code&gt; from “GitHub”&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;burger&quot;&lt;/code&gt; from “Hamburger”&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;on&quot; &lt;/code&gt; from “dongle”&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;nap&quot;&lt;/code&gt; from “Snapchat”&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In a comment: &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;string&quot;[a:b]&lt;/code&gt; is called “slicing” a string. Why do you think it’s called that?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
In PyCharm, create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;getting_loopy&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;part-1&quot;&gt;Part 1&lt;/h2&gt;
&lt;p&gt;Write a function &lt;code class=&quot;highlighter-rouge&quot;&gt;fruit_pluralizer&lt;/code&gt;. It will take in a list of fruit and return nothing. The function should update the values of the list so that the values are plural. If the fruit name ends in a ‘y’ remove the ‘y’ and add ‘ies’, otherwise add an ‘s’.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create the function contract for &lt;code class=&quot;highlighter-rouge&quot;&gt;fruit_pluralizer&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Provide a few examples that confirm &lt;code class=&quot;highlighter-rouge&quot;&gt;fruit_pluralizer&lt;/code&gt; works as expected:
    &lt;ul&gt;
      &lt;li&gt;Include examples with ‘berry’&lt;/li&gt;
      &lt;li&gt;What if the list is empty?&lt;/li&gt;
      &lt;li&gt;What if the fruit ends in ‘s’?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# contract goes here&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fruit_pluralizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_of_strings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# your code goes here&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fruit_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;berry&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;melon&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Single Fruit: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fruit_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fruit_pluralizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fruit_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;No longer single Fruit: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fruit_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# examples go here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Running the code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Single&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;berry&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;melon&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;single&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;apples&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;berries&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;melons&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;hint&quot;&gt;Hint&lt;/h3&gt;
&lt;p&gt;Remember that you can index into the string and get the length of a string. Use that to get the last letter of each word.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;part-2&quot;&gt;Part 2&lt;/h2&gt;
&lt;p&gt;Create a function &lt;code class=&quot;highlighter-rouge&quot;&gt;my_reverse&lt;/code&gt;, which will return a reversed string.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create the function contract for &lt;code class=&quot;highlighter-rouge&quot;&gt;my_reverse&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Provide a few examples to confirm that &lt;code class=&quot;highlighter-rouge&quot;&gt;my_reverse&lt;/code&gt; works:
    &lt;ul&gt;
      &lt;li&gt;An empty string&lt;/li&gt;
      &lt;li&gt;A string of even length&lt;/li&gt;
      &lt;li&gt;A string of odd length greater than 1&lt;/li&gt;
      &lt;li&gt;A string of length 1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;example-1&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# contract goes here&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string_to_reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# your code goes here&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;reversed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;apples&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;reversed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# examples go here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Running the code:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;selppa&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;span-classmega-octicon-octicon-light-bulbspan-hints&quot;&gt;&lt;span class=&quot;mega-octicon octicon-light-bulb&quot;&gt;&lt;/span&gt; Hints&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# To get the last element:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#To get the second to last element:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#To get the third to last element:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;bonus&quot;&gt;Bonus!&lt;/h3&gt;
&lt;p&gt;Create a function &lt;code class=&quot;highlighter-rouge&quot;&gt;reverse_strings_in_list&lt;/code&gt;. This function will input a list of strings you want to reverse. The function will reverse the strings in the list by calling the &lt;code class=&quot;highlighter-rouge&quot;&gt;my_reverse&lt;/code&gt; function in a loop.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>d_vwl</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/03/d_vwl/"/>
   <updated>2016-05-03T23:31:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/03/d_vwl</id>
   <content type="html">&lt;h2 id=&quot;remove-the-vowels&quot;&gt;Remove the Vowels&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
&lt;kbd&gt;In PyCharm, create a file called &lt;mark&gt;de_vowel&lt;/mark&gt;&lt;/kbd&gt;&lt;/p&gt;

&lt;p&gt;Create a function, &lt;code class=&quot;highlighter-rouge&quot;&gt;de_vowel&lt;/code&gt;, which will take a string as input and return a copy of that string with all the vowels removed. Otherwise, the string should be the same.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create the function contract for &lt;code class=&quot;highlighter-rouge&quot;&gt;de_vowel&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;de_vowel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# A function contract explains what the function does. So, in this case, yours might look like:&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#This function takes a string as an input and returns a copy of the string with the vowels removed.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 2. Write `de_vowel` using a for loop&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 3. Provide a few examples that confirm de_vowel works as expected:&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;What&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vowels&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;aeiou&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;What&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;there&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vowels&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;rdcls&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;What&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;there&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vowels&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;non&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vowels&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spaces&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;this is silly&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### Example&lt;/span&gt;

&lt;span class=&quot;sb&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;python&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# explanation&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;de_vowel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# your code goes here&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;no_vowels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;de_vowel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This sentence has no vowels&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no_vowels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# examples go here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Example output:&lt;/p&gt;

&lt;iframe src=&quot;https://trinket.io/embed/python/5238cab7c2?outputOnly=true&amp;amp;runOption=run&amp;amp;start=result&quot; width=&quot;100%&quot; height=&quot;200&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;review-adding-strings&quot;&gt;Review Adding Strings&lt;/h3&gt;

&lt;p&gt;Now, before your &lt;code class=&quot;highlighter-rouge&quot;&gt;d_vwl&lt;/code&gt;‘d sentence, add a string explaining what’s happening. Like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Here&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sentence&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;without&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vowels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sntnc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wtht&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vwls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;bonus&quot;&gt;Bonus!&lt;/h3&gt;

&lt;p&gt;Use a counter (variable you define outside of a loop to keep track of a value inside a loop) to create a function &lt;code class=&quot;highlighter-rouge&quot;&gt;count_vowels&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;count_vowels&lt;/code&gt; takes in a string and returns an int representing the number of vowels in the string.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title><strike>Quiz &</strike> Review</title>
   <link href="http://bsk.education/CSNYC_Python/2016/05/02/quiz-review/"/>
   <updated>2016-05-02T16:48:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/05/02/quiz-review</id>
   <content type="html">&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
&lt;kbd&gt;In PyCharm, create a file called &lt;mark&gt;May 2 Quiz&lt;/mark&gt;&lt;/kbd&gt;&lt;/p&gt;

&lt;p&gt;1) Write a function, &lt;code class=&quot;highlighter-rouge&quot;&gt;max_value&lt;/code&gt;, that takes in an integer and prints the numbers from 1 to that number inclusively.&lt;/p&gt;

&lt;p&gt;2) Write a function, &lt;code class=&quot;highlighter-rouge&quot;&gt;compare_lists&lt;/code&gt;, that given two lists of numbers the same length, compares each element of the lists, and print out the higher value at each index.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;list1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;list2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;compare_lists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 4 8 15 16 23 42 should print out&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3) Write a function, &lt;code class=&quot;highlighter-rouge&quot;&gt;swapping_stars&lt;/code&gt;, that will print out the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* - * - * -
- * - * - *
* - * - * -
- * - * - *
* - * - * -
- * - * - *
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;extra-credit&quot;&gt;Extra Credit&lt;/h2&gt;

&lt;p&gt;Write a function, &lt;code class=&quot;highlighter-rouge&quot;&gt;find_secret&lt;/code&gt;, that takes in a list of lists and an item. Once it finds the item it will print both indexes of where the item is.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;list_of_lists&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;where&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;is&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;the&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;very&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;secret&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;word&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;i&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;can&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;find&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;secret_item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;secret&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;find_secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_of_lists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# will print:  1, 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-mark-github&quot;&gt;&lt;/span&gt; Upload your code to GitHub! Then return to &lt;code class=&quot;highlighter-rouge&quot;&gt;d_vwl&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Scope</title>
   <link href="http://bsk.education/CSNYC_Python/2016/04/19/scope/"/>
   <updated>2016-04-19T21:57:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/04/19/scope</id>
   <content type="html">&lt;h2 id=&quot;do-now-in-notebook&quot;&gt;⏳ Do Now (in notebook)&lt;/h2&gt;

&lt;p&gt;Rank the following from easiest to hardest:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Importing built-in functions&lt;/li&gt;
  &lt;li&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;randint&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Abstraction/creating functions&lt;/li&gt;
  &lt;li&gt;Passing int/str/float/bool parameters into functions&lt;/li&gt;
  &lt;li&gt;Calling a function&lt;/li&gt;
  &lt;li&gt;List syntax&lt;/li&gt;
  &lt;li&gt;Return vs print&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will have a quiz next class covering all of the above topics. Is there any topic you would like to focus on and cover more of? &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Type the following into the terminal and run the program:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;d&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# input: a list of strings&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# output: None&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;list_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;z&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;What happened? Try writing a similar program but passing in integers instead of a list. What happens?&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;reading&quot;&gt;📖 Reading&lt;/h2&gt;

&lt;h3 id=&quot;variables-and-parameters-are-local&quot;&gt;Variables and parameters are local&lt;/h3&gt;

&lt;p&gt;When you create a variable inside a function, it is &lt;strong&gt;local&lt;/strong&gt;, which means that it only exists inside the function. For example:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;global_variable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;bob&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;local_variable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;bob&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;global_variable&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#what actually prints?&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local_variable&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#what actually prints?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Another example:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;together&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;part1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;part2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;part1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;part2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This function takes two parameters &lt;sup&gt;(&lt;code class=&quot;highlighter-rouge&quot;&gt;part1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;part2&lt;/code&gt;)&lt;/sup&gt; , adds them, and prints the result twice. Here is an example that uses it:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;line1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Hello there, &#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;line2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;children.&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;together&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# What prints?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;When &lt;code class=&quot;highlighter-rouge&quot;&gt;together&lt;/code&gt; terminates, the variable cat (inside &lt;code class=&quot;highlighter-rouge&quot;&gt;together()&lt;/code&gt;) is destroyed. What happens if we try to print it?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;NameError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;cat&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Parameters are also local. For example, outside &lt;code class=&quot;highlighter-rouge&quot;&gt;together&lt;/code&gt;, there is no such thing as &lt;code class=&quot;highlighter-rouge&quot;&gt;part1&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;part2&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;aliasing&quot;&gt;Aliasing&lt;/h3&gt;

&lt;p&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; refers to an object and you assign &lt;code class=&quot;highlighter-rouge&quot;&gt;b = a&lt;/code&gt;, then both variables refer to the same object:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;local-global-build-in-lbg&quot;&gt;Local, Global, Build-in &lt;code class=&quot;highlighter-rouge&quot;&gt;LBG&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Python understands names at three &lt;strong&gt;scopes&lt;/strong&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;ocal, then &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt;lobal, then &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;uilt-in.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;lab&quot;&gt;🖥 Lab&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-file-code&quot;&gt;&lt;/span&gt;
&lt;kbd&gt;In PyCharm, create a new file called &lt;mark&gt;Scope_Lab.py&lt;/mark&gt;&lt;/kbd&gt;&lt;/p&gt;

&lt;h3 id=&quot;aliasing-1&quot;&gt;Aliasing&lt;/h3&gt;

&lt;p&gt;Will updating b affect a? Explain why or why not?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Predict what &lt;code class=&quot;highlighter-rouge&quot;&gt;my_list&lt;/code&gt; list will print out when this code is run. If you are not sure check the code by copying and running it.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# input: a list of ints&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# output: an int&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;yo&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;update_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;scope&quot;&gt;Scope&lt;/h3&gt;

&lt;p&gt;Label each variable as global or local.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;var_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;kittens&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cookies&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# input: a string&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# output: a string&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_favorite_things&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;song_lyrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rain drops on roses,&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;combined_song&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;song_lyrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_favorite_things&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combined_song&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# input: a string&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# output: a string&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_function_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;full_lyrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;on &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;full_song&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_lyrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full_song&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_song&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_function_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Write down what (if anything) is wrong with the following code. If there was an issue write out how to fix it. If you are unsure copy and run the code and fix it.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;var_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;cat&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;dog&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_out_my_favorite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;favorite_pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;favorite_pet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My favorite pet is the cat.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;favorite_pet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My favorite pet is the dog.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;var_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cat&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;print_out_my_favorite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Write a program that has a global variable, &lt;code class=&quot;highlighter-rouge&quot;&gt;my_num&lt;/code&gt;. Create three functions that update &lt;code class=&quot;highlighter-rouge&quot;&gt;my_num&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;add2&lt;/code&gt;: this function adds 2 to &lt;code class=&quot;highlighter-rouge&quot;&gt;my_num&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;multiply_num&lt;/code&gt;: this function takes in a parameter, &lt;code class=&quot;highlighter-rouge&quot;&gt;multiplier&lt;/code&gt;, and multiplies &lt;code class=&quot;highlighter-rouge&quot;&gt;my_num&lt;/code&gt; by that parameter&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;add2_and_multiply&lt;/code&gt;: this function takes in a parameter, &lt;code class=&quot;highlighter-rouge&quot;&gt;multiplier&lt;/code&gt;, and calls &lt;code class=&quot;highlighter-rouge&quot;&gt;add2&lt;/code&gt;, then calls &lt;code class=&quot;highlighter-rouge&quot;&gt;multiply_num&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Practice Makes Perfect</title>
   <link href="http://bsk.education/CSNYC_Python/2016/04/18/practice-makes-perfect/"/>
   <updated>2016-04-18T23:16:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/04/18/practice-makes-perfect</id>
   <content type="html">&lt;h2 id=&quot;do-now-smallin-google-classroomsmall&quot;&gt;Do Now &lt;small&gt;(In Google Classroom)&lt;/small&gt;&lt;/h2&gt;

&lt;p&gt;In Python, what is the difference between return and print?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;kbd&gt;In PyCharm, create a new file called &lt;mark&gt;practice_makes_perfect.py&lt;/mark&gt;&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;codeisevencode&quot;&gt;&lt;code&gt;is_even&lt;/code&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Define a function is_even that will take a number x as input.&lt;/li&gt;
  &lt;li&gt;If x is even, then return True.&lt;/li&gt;
  &lt;li&gt;Otherwise, return False.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;codeisintcode&quot;&gt;&lt;code&gt;is_int&lt;/code&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Define a function &lt;code&gt;is_int&lt;/code&gt; that takes a number &lt;code&gt;x&lt;/code&gt; as an input.&lt;/li&gt;
  &lt;li&gt;Have it &lt;code&gt;return True&lt;/code&gt; if the number is an integer (as defined above) and &lt;code&gt;False&lt;/code&gt; otherwise.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# For example&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;is_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;is_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# False&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;is_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;codedigitsumcode&quot;&gt;&lt;code&gt;digit_sum&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Write a function called &lt;code&gt;digit_sum&lt;/code&gt; that takes a positive integer &lt;code&gt;n&lt;/code&gt; as input and returns the sum of all that number’s digits.&lt;/p&gt;

&lt;p&gt;For example: &lt;code&gt;digit_sum(1234)&lt;/code&gt; should return &lt;code&gt;10&lt;/code&gt; which is &lt;code&gt;1 + 2 + 3 + 4&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(Assume that the number you are given will always be positive.)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>War!</title>
   <link href="http://bsk.education/CSNYC_Python/2016/04/15/War/"/>
   <updated>2016-04-15T00:00:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/04/15/War</id>
   <content type="html">&lt;h2 id=&quot;war-card-game&quot;&gt;War (Card Game)&lt;/h2&gt;

&lt;p&gt;1) Create a program that lets a user play the card game &lt;a href=&quot;https://en.wikipedia.org/wiki/War_(card_game)&quot;&gt;‘War’&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Your game should:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Start with a given shuffled deck variable (shuffle function comes from python’s random library, more details below)&lt;/li&gt;
  &lt;li&gt;Ask for player1 and player2’s names.&lt;/li&gt;
  &lt;li&gt;Have a function &lt;code class=&quot;highlighter-rouge&quot;&gt;player_turn&lt;/code&gt;, with the contract shown below:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#player_turn: takes in a player name, player_name, and draws/removes a card from the deck, prints &quot;user drew card x&quot;, and returns the value&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#input: player_name, string&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#output: string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Have a function &lt;code class=&quot;highlighter-rouge&quot;&gt;compare_scores&lt;/code&gt; that takes in the two strings representing the cards drawn and compares the card values. Make sure to write the contract for &lt;code class=&quot;highlighter-rouge&quot;&gt;compare_scores&lt;/code&gt;!&lt;/li&gt;
  &lt;li&gt;For simplicty Jacks will be represented as 11, Queens will be represented as 12, Kings will be represented as 13, and Aces will be represented as 14&lt;/li&gt;
  &lt;li&gt;For simplicty the suit does not matter&lt;/li&gt;
  &lt;li&gt;Include a while loop that keeps the game running until there are no cards in the deck.&lt;/li&gt;
  &lt;li&gt;Keep track of the score.&lt;/li&gt;
  &lt;li&gt;Declare the name of the winner and final score at the end of the game.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;deck-shuffling&quot;&gt;Deck Shuffling&lt;/h3&gt;

&lt;p&gt;While seemingly simple– shuffling a deck is a somewhat complicated problem. Luckily, Python’s random library has a built in shuffle algorithm. Feel free to read the documentation, but we have provided a simple wrapper function that will return to you a shuffled deck of cards.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# shuffled_deck: will return a shuffled deck to the user&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#input:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#output: a list representing a shuffled deck&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shuffled_deck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;basic_deck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basic_deck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;basic_deck&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;bonus&quot;&gt;Bonus!&lt;/h3&gt;

&lt;p&gt;Instead of closing the program when the deck is empty, create a way for the user to play again.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title><code>return</code> vs. <code>print</code></title>
   <link href="http://bsk.education/CSNYC_Python/2016/04/11/returnVSprint/"/>
   <updated>2016-04-11T00:00:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/04/11/returnVSprint</id>
   <content type="html">&lt;h2 id=&quot;do-now&quot;&gt;🎯 Do Now&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Open up PyCharm. Paste the following code into the editor:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mystery_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;random_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# What&#39;s the range of randoms?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# What&#39;s the probability that random_number is greater than 0?&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mystery_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;In comments:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;What happens when your run this code? How do you know what the result was?&lt;/li&gt;
  &lt;li&gt;Keeping the function the same, rewrite the code to print out the value that the function returns.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;span-classmega-octicon-octicon-mark-githubspan-upload-your-code-to-github-in-a-file-called-kbdapril11donowpykbd-&quot;&gt;&lt;span class=&quot;mega-octicon octicon-mark-github&quot;&gt;&lt;/span&gt; Upload your code to GitHub in a file called &lt;kbd&gt;April11_DoNow.py&lt;/kbd&gt; ⭐️&lt;/h4&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;reading&quot;&gt;📖 Reading&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;print&lt;/code&gt; just shows the human user a string representing what is going on inside the computer. The computer cannot make use of that printing. &lt;code&gt;return&lt;/code&gt; is how a function gives back a value. This value is often unseen by the human user, but it can be used by the computer in further functions.&lt;/p&gt;

&lt;p&gt;On a more expansive note, &lt;code&gt;print&lt;/code&gt; will not in any way affect a function. It is simply there for the human user’s benefit. It is very useful for understanding how a program works and can be used in debugging to check various values in a program without interrupting the program.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;print-is-for-people-remember-that-slogan-printing-has-no-effect-on-the-ongoing-execution-of-a-program-it-doesnt-assign-a-value-to-a-variable-it-doesnt-return-a-value-from-a-function&quot;&gt;Print is for people. Remember that slogan. Printing has no effect on the ongoing execution of a program. It doesn’t assign a value to a variable. It doesn’t return a value from a function.&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;guided-practice&quot;&gt;🐍 Guided Practice&lt;/h2&gt;

&lt;h4 id=&quot;make-a-new-file-called-kbdapril11guidedpracticepykbd-&quot;&gt;⭐️ Make a new file called &lt;kbd&gt;April11_GuidedPractice.py&lt;/kbd&gt; ⭐️&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# what does this function return ?&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# how is this one different ?&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;return_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# let&#39;s try to use our 2 functions&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;running print_only ...&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;running return_only ...&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;return_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;printing print_only ...&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;printing return_only ...&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;using print_only ...&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;using return_only ...&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;return_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;check-your-understanding&quot;&gt;✅ Check your understanding&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;What will the following code output?&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;2&lt;/li&gt;
  &lt;li&gt;5&lt;/li&gt;
  &lt;li&gt;7&lt;/li&gt;
  &lt;li&gt;10&lt;/li&gt;
  &lt;li&gt;Error: y has a value but x is an unbound variable inside the square function&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer on &lt;a href=&quot;https://docs.google.com/a/ms223.org/forms/d/1QsTK_Tlw1hIwoJenxGX5beEThv90lWFecT1_fJm_1s8/viewform#start=embed&quot;&gt;this Google form&lt;/a&gt;.&lt;/p&gt;

&lt;!-- ## Independent Work
War!

War (Card Game)

1) Create a program that lets a user play the card game [&#39;War&#39;](http://www.pagat.com/war/war.html).

Your game should:

* Start with a given shuffled deck variable (shuffle function comes from python&#39;s random library, more details below)
* Ask for player1 and player2&#39;s names.
* Have a function `player_turn`, with the contract shown below:

```python
#player_turn: takes in a player name, player_name, and draws/removes a card from the deck, prints &quot;user drew card x&quot;, and returns the value
#input: player_name, string
#output: string
```
* Have a function `compare_scores` that takes in the two strings representing the cards drawn and compares the card values. Make sure to write the contract for `compare_scores`!
* For simplicty Jacks will be represented as 11, Queens will be represented as 12, Kings will be represented as 13, and Aces will be represented as 14
* For simplicty the suit does not matter
* Include a while loop that keeps the game running until there are no cards in the deck.
* Keep track of the score.
* Declare the name of the winner and final score at the end of the game.

### Deck Shuffling

While seemingly simple-- shuffling a deck is a somewhat comoplicatd problem. Luckily, Python&#39;s random library has a built in shuffle algorithm. Feel free to read the documentation, but we have provided a simple wrapper function that will return to you a shuffled deck of cards.

```python

import random

# shuffled_deck: will returna shuffled deck to the user
#input:
#output: a list representing a shuffled deck
def shuffled_deck():
	basic_deck = range(2, 15) * 4
	random.shuffle(basic_deck)
	return basic_deck
```

###Bonus!
Instead of closing the program when the deck is empty, create a way for the user to play again. --&gt;
</content>
 </entry>
 
 <entry>
   <title>Rock || Paper || Scissors</title>
   <link href="http://bsk.education/CSNYC_Python/2016/04/07/rock-paper-scissors/"/>
   <updated>2016-04-07T14:41:00-04:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/04/07/rock-paper-scissors</id>
   <content type="html">&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Play Rock || Paper || Scissors&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;turns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;best of...?&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;rock&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;paper&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;scissors&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Let&#39;s play a game of rock paper scissors&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# user_gesture = raw_input(&quot;What&#39;s your move- rock, paper or scissors?&quot;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;turns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user_gesture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;What&#39;s your move- rock, paper or scissors?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# moved user_gesture to the top of the four loop&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;computer_gesture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_gesture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;rock&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computer_gesture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;scissors&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_gesture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;paper&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computer_gesture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;rock&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_gesture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;scissors&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computer_gesture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;paper&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Computer plays &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computer_gesture&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;You win!&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# user_gesture = raw_input(&quot;What&#39;s your move- rock, paper or scissors?&quot;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_gesture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computer_gesture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Computer plays &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computer_gesture&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;It&#39;s a tie!&quot;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# user_gesture = raw_input(&quot;What&#39;s your move- rock, paper or scissors?&quot;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Computer plays &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computer_gesture&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;You loose!&quot;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# user_gesture = raw_input(&quot;What&#39;s your move- rock, paper or scissors?&quot;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Your score is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; out of &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;turns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Debugging</title>
   <link href="http://bsk.education/CSNYC_Python/2016/02/23/debugging/"/>
   <updated>2016-02-23T07:33:00-05:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/02/23/debugging</id>
   <content type="html">&lt;h2 id=&quot;ruh-roh-broken-code-smallthanks-aileensmall&quot;&gt;Ruh roh broken code &lt;small&gt;(Thanks, Aileen!)&lt;/small&gt;&lt;/h2&gt;

&lt;p class=&quot;lead&quot;&gt;Read the error messages. Try to fix the bugs, and include a comment for what you changed, and &lt;mark&gt;why&lt;/mark&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Hint: Try reading reading the error messages. They&#39;ll point you to a specific line number. Look one line up or down, seeing if you spot anything off. &lt;/code&gt;&lt;/p&gt;

&lt;p class=&quot;lead&quot;&gt;If you finish that, go read my comments on your Quiz_App and resume working.&lt;/p&gt;

&lt;iframe src=&quot;https://trinket.io/embed/python/292d8aeef3&quot; width=&quot;100%&quot; height=&quot;480&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</content>
 </entry>
 
 <entry>
   <title>Quiz App</title>
   <link href="http://bsk.education/CSNYC_Python/2016/02/12/quiz-app/"/>
   <updated>2016-02-12T07:35:00-05:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/02/12/quiz-app</id>
   <content type="html">&lt;!-- 
&lt;div class=&quot;page-header&quot;&gt;
			&lt;h1&gt;
				&lt;code&gt;Quiz_App&lt;/code&gt;
				&lt;small&gt;Now go make your own...&lt;/small&gt;
			&lt;/h1&gt;
		&lt;/div&gt; --&gt;

&lt;iframe src=&quot;https://trinket.io/embed/python/1d7b69d9d7?start=result&amp;amp;toggleCode=true&quot; width=&quot;100%&quot; height=&quot;200&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;quiz-app&quot;&gt;Quiz App&lt;/h3&gt;

&lt;p&gt;Create your own quiz with&lt;/p&gt;

&lt;p class=&quot;lead&quot;&gt;
			&lt;input type=&quot;checkbox&quot; value=&quot;&quot; /&gt; 10 or more questions.&lt;/p&gt;
&lt;p class=&quot;lead&quot;&gt;
			&lt;input type=&quot;checkbox&quot; value=&quot;&quot; /&gt; If you have the user enter non-numeric answers, think and cover thdifferent ways a user could enter a correct answer.
	&lt;p&gt;
				&lt;em&gt;For example, if the answer is &amp;ldquo;a&amp;rdquo;would &amp;ldquo;A&amp;rdquo; also be acceptable? &lt;/em&gt;
	&lt;/p&gt;
&lt;/p&gt;
&lt;p class=&quot;lead&quot;&gt;
			&lt;input type=&quot;checkbox&quot; value=&quot;&quot; /&gt; Let the user know if she gets the question correct. Print a messagdepending on the user&#39;s answer.&amp;lt;/p
	&lt;h4&gt;Extension: For a 4...&lt;/h4&gt;
	&lt;p class=&quot;lead&quot;&gt;
				&lt;input type=&quot;checkbox&quot; value=&quot;&quot; /&gt; Figure out how to add up correct answers and tell the user hescore.
	&lt;/p&gt;
&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Find Average</title>
   <link href="http://bsk.education/CSNYC_Python/2016/02/09/find-average/"/>
   <updated>2016-02-09T09:04:00-05:00</updated>
   <id>http://bsk.education/CSNYC_Python/2016/02/09/find-average</id>
   <content type="html">&lt;p&gt;In this assignment, you’re going to create an app to calculate your GPA. The code will look something like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# variable = input(&quot;question?&quot;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;What&#39;s your grade in math?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# What happens if you try this?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] How many inputs do you need?&lt;/li&gt;
  &lt;li&gt;[ ] What kind of data do you get back from an input?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Try this to find out a type of data:&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;What&#39;s your grade in math?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Test &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Test! &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>
